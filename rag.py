import requests

class HuggingFaceInferenceClient:
    """
    Client to interact with the Hugging Face Inference API for text generation.
    """

    def __init__(self, model_id: str, hf_token: str):
        """
        Initialize the client with model ID and Hugging Face token.

        Args:
            model_id (str): The model to use (e.g., "HuggingFaceH4/zephyr-7b-beta").
            hf_token (str): Your personal Hugging Face token with read permission.
        """
        self.model_id = model_id
        self.hf_token = hf_token
        self.api_url = f"https://api-inference.huggingface.co/models/{self.model_id}"
        self.headers = {
            "Authorization": f"Bearer {self.hf_token}"
        }

    def generate_text(self, prompt: str, max_new_tokens: int = 200) -> str:
        """
        Send a prompt to the Hugging Face model via the Inference API and return the generated text.

        Args:
            prompt (str): The input text to send.
            max_new_tokens (int): Maximum number of new tokens to generate.

        Returns:
            str: The text generated by the model.
        """
        payload = {
            "inputs": prompt,
            "parameters": {
                "max_new_tokens": max_new_tokens,
                "temperature": 0.7,
                "top_p": 0.9,
                "do_sample": True,
                "return_full_text": False
            }
        }

        response = requests.post(self.api_url, headers=self.headers, json=payload)

        if response.status_code == 200:
            result = response.json()
            return result[0]["generated_text"].strip()
        else:
            raise Exception(f"API Error {response.status_code}: {response.text}")

if __name__ == "__main__":
    HF_TOKEN = "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"  # use your personal token
    MODEL_ID = "HuggingFaceH4/zephyr-7b-beta"            # free and active model

    prompt = """
You are a medical assistant. Based on the patient's history, generate a therapeutic report.

Patient: 45-year-old male, diagnosed with type 1 diabetes and hypertension.
Current medication: insulin and metformin.
"""

    print("ðŸ”Ž Sending prompt to Hugging Face...")
    client = HuggingFaceInferenceClient(MODEL_ID, HF_TOKEN)
    result = client.generate_text(prompt)
    print("\nðŸ“‹ Generated Output:\n")
    print(result)
