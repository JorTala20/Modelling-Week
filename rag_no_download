import requests

class TreatmentPlannerRAG:
    def __init__(self):
        self.api_token = "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"
        self.model_id = "tiiuae/falcon-7b-instruct"
        self.api_url = f"https://api-inference.huggingface.co/models/{self.model_id}"
        self.headers = {
            "Authorization": f"Bearer {self.api_token}"
        }

    def generate_plan(self, prompt, max_tokens=400):
        payload = {
            "inputs": prompt,
            "parameters": {
                "max_new_tokens": max_tokens,
                "temperature": 0.7,
                "top_p": 0.9,
                "return_full_text": False
            }
        }

        response = requests.post(self.api_url, headers=self.headers, json=payload)
        if response.status_code == 200:
            result = response.json()
            return result[0]["generated_text"].strip()
        else:
            raise Exception(f"API Error {response.status_code}: {response.text}")

if __name__ == "__main__":
    planner = TreatmentPlannerRAG()

    full_prompt = """
Context documents:
1. Clinical trial: Testing a new long-acting insulin in adults with type 1 diabetes.
2. Guideline: Combine insulin therapy with blood pressure control for patients with comorbid hypertension.
3. Paper: Recent studies show improved outcomes using continuous glucose monitoring.

Patient: 45-year-old male with type 1 diabetes and hypertension.
Current treatment: insulin and metformin.

Task: Based on the documents above, suggest a personalized treatment plan for this patient.
"""

    print("\nðŸ”„ Requesting treatment plan from Hugging Face API...\n")
    treatment_plan = planner.generate_plan(full_prompt)
    
    print("ðŸ”¬ Suggested Treatment Plan:\n")
    print(treatment_plan)
